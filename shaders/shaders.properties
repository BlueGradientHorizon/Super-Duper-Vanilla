## Profiles
profile.POTATO=!SHD_ENABLE !VOL_LIGHT !SHD_COL !SHADOW_FILTER !SSR !BLOOM ANTI_ALIASING=0
profile.LOW=profile.POTATO SHD_ENABLE SSR SSR_STEPS=16 BLOOM shadowMapResolution=1024
profile.MEDIUM=profile.LOW SHD_COL SHADOW_FILTER VOL_LIGHT SSR_STEPS=20 ANTI_ALIASING=1
profile.HIGH=profile.MEDIUM SSR_STEPS=24 shadowMapResolution=2048
profile.ULTRA=profile.HIGH SSR_STEPS=32 ANTI_ALIASING=2

## Set shader settings
clouds=off
vignette = false
underwaterOverlay=false
separateAo = true
fog=off

## Main shader settings screen
screen = [DEBUG] <profile> <empty> <empty> [Post] [Lighting] [Atmospherics] [World] [PBR] [CONFIGURE_COLORS] [Tonemap]
    screen.DEBUG = WHITE_MODE BUFFER_VIEW NOISE_SPEED ZA_WARUDO
    screen.Post = DOF FOCAL_RANGE DOF_LOD <empty> BLOOM BLOOM_BRIGHTNESS LENS_FLARE LENS_FLARE_BRIGHTNESS VIGNETTE VIGNETTE_INTENSITY <empty> <empty> OUTLINES OUTLINE_BRIGHTNESS OUTLINE_PIX_SIZE <empty> ANTI_ALIASING
        screen.Tonemap = SATURATION CONTRAST EXPOSURE <empty> <empty> <empty> TINT_R TINT_G TINT_B <empty> <empty> <empty> AUTO_EXPOSURE AUTO_EXPOSURE_SPEED
    screen.Lighting = SHD_ENABLE SHADOW_FILTER SHD_COL shadowMapResolution shadowDistance sunPathRotation <empty> <empty> [RAY_TRACING] UNDERWATER_CAUSTICS AMBIENT_LIGHTING
        screen.RAY_TRACING = SSGI SSR SSGI_STEPS SSR_STEPS SSGI_BISTEPS SSR_BISTEPS <empty> <empty> ROUGH_REFLECTIONS PREVIOUS_FRAME
    screen.Atmospherics = VOL_LIGHT_BRIGHTNESS VOL_LIGHT <empty> <empty> MIST_GROUND_FOG_BRIGHTNESS BORDER_FOG <empty> <empty> STORY_MODE_CLOUDS DOUBLE_VANILLA_CLOUDS CLOUD_FADE FADE_SPEED SECOND_CLOUD_HEIGHT SKYBOX_BRIGHTNESS <empty> <empty> SUN_MOON_TYPE SUN_MOON_INTENSITY
    screen.World = ANIMATE CURRENT_SPEED TIMELAPSE_MODE WIND_SPEED <empty> <empty> WORLD_CURVATURE WORLD_CURVATURE_SIZE
    screen.PBR = DEFAULT_MAT ENVIRO_MAT AUTO_GEN_NORM ENABLE_SS <empty> <empty> [POM_SETTINGS] EMISSIVE_INTENSITY <empty> <empty> [WATER_SETTINGS] [LAVA_SETTINGS]
        screen.POM_SETTINGS = PARALLAX_OCCLUSION PARALLAX_DEPTH PARALLAX_STEPS <empty> <empty> <empty> PARALLAX_SHADOWS PARALLAX_SHD_STEPS <empty> <empty> SLOPE_NORMALS
        screen.WATER_SETTINGS = WATER_BRIGHTNESS WATER_NOISE <empty> <empty> WATER_NORM WATER_BLUR_SIZE WATER_DEPTH_SIZE WATER_TILE_SIZE <empty> <empty> STYLIZED_WATER_ABSORPTION WATER_FOAM
        screen.LAVA_SETTINGS = LAVA_BRIGHTNESS LAVA_NOISE LAVA_TILE_SIZE 
    screen.CONFIGURE_COLORS = [Overworld] [Nether] [End] <empty> <empty> <empty> [BLOCK_LIGHT_COLOR]
        screen.Overworld= [DIRECT_LIGHT_COLOR0] [SKY_COLOR0]
            screen.DIRECT_LIGHT_COLOR0 = LIGHT0_DR LIGHT0_DG LIGHT0_DB LIGHT0_DI <empty> <empty> LIGHT0_NR LIGHT0_NG LIGHT0_NB LIGHT0_NI <empty> <empty> LIGHT0_DDR LIGHT0_DDG LIGHT0_DDB LIGHT0_DDI
            screen.SKY_COLOR0 = SKY0_DR SKY0_DG SKY0_DB SKY0_DI <empty> <empty> SKY0_NR SKY0_NG SKY0_NB SKY0_NI <empty> <empty> SKY0_DDR SKY0_DDG SKY0_DDB SKY0_DDI
        screen.Nether = WORLDn1_VANILLA_FOGCOLI
        screen.End = [DIRECT_LIGHT_COLOR1] [SKY_COLOR1]
            screen.DIRECT_LIGHT_COLOR1 = WORLD1_CUSTOM_LIGHTCOLR WORLD1_CUSTOM_LIGHTCOLG WORLD1_CUSTOM_LIGHTCOLB WORLD1_CUSTOM_LIGHTCOLI
            screen.SKY_COLOR1 = WORLD1_CUSTOM_FOGCOLR WORLD1_CUSTOM_FOGCOLG WORLD1_CUSTOM_FOGCOLB WORLD1_CUSTOM_FOGCOLI
        screen.BLOCK_LIGHT_COLOR = BLOCKLIGHT_R BLOCKLIGHT_G BLOCKLIGHT_B BLOCKLIGHT_I

## Sliders
sliders = SATURATION CONTRAST EXPOSURE VIGNETTE_INTENSITY shadowMapResolution sunPathRotation WATER_BLUR_SIZE WATER_DEPTH_SIZE WATER_TILE_SIZE NOISE_SPEED VOL_LIGHT_BRIGHTNESS SSGI_STEPS SSR_STEPS SSGI_BISTEPS SSR_BISTEPS MIST_GROUND_FOG_BRIGHTNESS BLOOM_BRIGHTNESS CURRENT_SPEED WIND_SPEED OUTLINE_BRIGHTNESS OUTLINE_PIX_SIZE AMBIENT_LIGHTING FADE_SPEED SECOND_CLOUD_HEIGHT WATER_BRIGHTNESS LAVA_BRIGHTNESS LAVA_TILE_SIZE BLOCKLIGHT_R BLOCKLIGHT_G BLOCKLIGHT_B BLOCKLIGHT_I LIGHT0_DR LIGHT0_DG LIGHT0_DB LIGHT0_DI LIGHT0_NR LIGHT0_NG LIGHT0_NB LIGHT0_NI LIGHT0_DDR LIGHT0_DDG LIGHT0_DDB LIGHT0_DDI SKY0_DR SKY0_DG SKY0_DB SKY0_DI SKY0_NR SKY0_NG SKY0_NB SKY0_NI SKY0_DDR SKY0_DDG SKY0_DDB SKY0_DDI TINT_R TINT_G TINT_B FOCAL_RANGE DOF_LOD WORLD1_CUSTOM_FOGCOLR WORLD1_CUSTOM_FOGCOLG WORLD1_CUSTOM_FOGCOLB WORLD1_CUSTOM_FOGCOLI WORLDn1_VANILLA_FOGCOLI WORLD1_CUSTOM_LIGHTCOLR WORLD1_CUSTOM_LIGHTCOLG WORLD1_CUSTOM_LIGHTCOLB WORLD1_CUSTOM_LIGHTCOLI PARALLAX_DEPTH PARALLAX_STEPS AUTO_EXPOSURE_SPEED PARALLAX_SHD_STEPS SUN_MOON_INTENSITY EMISSIVE_INTENSITY LENS_FLARE_BRIGHTNESS SKYBOX_BRIGHTNESS WORLD_CURVATURE_SIZE shadowDistance

## Custom textures
texture.composite.colortex4 = minecraft:textures/environment/clouds.png
texture.deferred.colortex4 = minecraft:textures/environment/clouds.png
texture.noise = textures/noiseBlueBlueCell.png

## Notes

## ____0 Day (in which the Minecraft wiki said)
## _6000 Noon (in which the Minecraft wiki said)

## 11200 Sunset (-800, Exact time fog turns from orange to dark light blue)
## 12000 Sunset (End of day, sun sets in which the Minecraft wiki said)

## 13000 Night (in which the Minecraft wiki said)
## 18000 Midnight (in which the Minecraft wiki said)

## 22200 Sunrise (-800, Exact time fog turns from dark light blue to orange)
## 23000 Sunrise (End of night, sun rises in which the Minecraft wiki said)

## ------------------------------------------------------------------------## 

## Day lasts 12000 ticks (in which the Minecraft wiki said)
## Day lasts exactly 11200 ticks (12000 - 800)

## Sunset lasts 1000 ticks (in which the Minecraft wiki said)
## Sunset lasts exactly 1800 ticks (1000 + 800, fog turns from orange to dark light blue in the process)

## Night lasts 10000 ticks (in which the Minecraft wiki said)
## Night lasts exactly 9200 ticks (10000 - 800)

## Sunrise lasts 1000 ticks (in which the Minecraft wiki said)
## Sunrise lasts exactly 1800 ticks (1000 + 800, fog turns from dark light blue to orange in the process)

## 12785 is the last tick of the day the shadowLightPosition switches to the moon position
## 23214 is the last tick of the night the shadowLightPosition switches to the sun position

## Uniforms, time calculations by BuilderB0y

#if TIMELAPSE_MODE != 0
    variable.float.smoothedWorldTime = smooth(1, worldTime, 16, 16)
    uniform.float.zaWarudo = abs((smoothedWorldTime - worldTime) / 24.0)
    variable.float.adjustedTime = abs((((smoothedWorldTime / 1000.0) + 6.0) % 24.0) - 12.0)
    uniform.float.animationFrameTime = smoothedWorldTime / 24.0
#else
    variable.float.adjustedTime = abs((((worldTime / 1000.0) + 6.0) % 24.0) - 12.0)
#endif

uniform.float.day = clamp(5.333 - adjustedTime, 0.0, 1.0)
uniform.float.night = clamp(adjustedTime - 6.333, 0.0, 1.0)
uniform.float.dawnDusk = (1.0 - day) - night

## BSL's shadow fade calculation (modified)
uniform.float.shdFade = clamp(1.0 - (abs(abs(sunAngle - 0.5) - 0.25) - 0.225) * 40.0, 0.0, 1.0)

## Normalized light pos from shadowModelView
uniform.vec3.nLightPos = vec3(shadowModelView.0.2, shadowModelView.1.2, shadowModelView.2.2)
## also equivalent to:
## vec3(0, 0, 1) * mat3(shadowModelView) = vec3(shadowModelView[0].z, shadowModelView[1].z, shadowModelView[2].z)
## shadowLightPosition is broken in other dimensions. The current is equivalent to:
## normalize(mat3(gbufferModelViewInverse) * shadowLightPosition + gbufferModelViewInverse[3].xyz)

#### Generalized groups of biomes by tempurature (by Xonk)
uniform.float.isWarm  = smooth(2, if(in(biome, 44, 2, 17, 130, 37, 39, 167, 38, 166, 165), 1, 0), 8, 8)
uniform.float.isPeaks = smooth(3, if(cameraPosition.y >= 93, 1, 0), 8, 8)
uniform.float.isSnowy = smooth(4, if(in(biome, 10, 50, 11, 26, 30, 31, 158, 12, 13, 140), 1, 0), 8, 8)

## Frame Jitter Uniform
uniform.int.framemod8 = frameCounter % 8